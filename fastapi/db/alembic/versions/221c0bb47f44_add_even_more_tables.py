"""Add even more tables

Revision ID: 221c0bb47f44
Revises: d2becf46c89a
Create Date: 2024-09-03 10:55:34.445054

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '221c0bb47f44'
down_revision: Union[str, None] = 'd2becf46c89a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('experiments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('created_user', sa.Integer(), nullable=False),
    sa.Column('delegated', sa.Boolean(), nullable=True),
    sa.Column('department', sa.Integer(), nullable=False),
    sa.Column('research_initiative', sa.Integer(), nullable=True),
    sa.Column('area_of_science', sa.Integer(), nullable=True),
    sa.Column('level_of_effort', sa.Integer(), nullable=True),
    sa.Column('funding_source', sa.Integer(), nullable=True),
    sa.Column('data_sensivitity', sa.Integer(), nullable=True),
    sa.Column('cloud_provider_requested', sa.Integer(), nullable=True),
    sa.Column('cloud_provider_actual', sa.Integer(), nullable=True),
    sa.Column('background', sa.TEXT(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('goals', sa.TEXT(), nullable=True),
    sa.Column('fin_forecasted', sa.Float(), nullable=True),
    sa.Column('fin_initial', sa.Float(), nullable=True),
    sa.Column('fin_actual', sa.Float(), nullable=True),
    sa.Column('fin_automated_reports', sa.Boolean(), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('environment_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['area_of_science'], ['experiment_areaofscience.id'], ),
    sa.ForeignKeyConstraint(['cloud_provider_actual'], ['cloud_providers.id'], ),
    sa.ForeignKeyConstraint(['cloud_provider_requested'], ['cloud_providers.id'], ),
    sa.ForeignKeyConstraint(['created_user'], ['users.id'], ),
    sa.ForeignKeyConstraint(['data_sensivitity'], ['experiment_datasensitivity.id'], ),
    sa.ForeignKeyConstraint(['department'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['funding_source'], ['experiment_fundingsource.id'], ),
    sa.ForeignKeyConstraint(['level_of_effort'], ['experiment_levelofeffort.id'], ),
    sa.ForeignKeyConstraint(['status'], ['experiment_statuses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_experiments_fin_automated_reports'), 'experiments', ['fin_automated_reports'], unique=False)
    op.create_index(op.f('ix_experiments_is_archived'), 'experiments', ['is_archived'], unique=False)
    op.create_index(op.f('ix_experiments_is_deleted'), 'experiments', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_experiments_status'), 'experiments', ['status'], unique=False)
    op.create_table('link_experiments_related',
    sa.Column('experiment_1', sa.Integer(), nullable=False),
    sa.Column('experiment_2', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['experiment_1'], ['experiments.id'], ),
    sa.ForeignKeyConstraint(['experiment_2'], ['experiments.id'], ),
    sa.PrimaryKeyConstraint('experiment_1', 'experiment_2')
    )
    op.create_table('link_experiments_tags',
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiments.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['experiment_tags.id'], ),
    sa.PrimaryKeyConstraint('experiment_id', 'tag_id')
    )
    op.create_table('link_experiments_users',
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiments.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['users_roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('experiment_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('link_experiments_users')
    op.drop_table('link_experiments_tags')
    op.drop_table('link_experiments_related')
    op.drop_index(op.f('ix_experiments_status'), table_name='experiments')
    op.drop_index(op.f('ix_experiments_is_deleted'), table_name='experiments')
    op.drop_index(op.f('ix_experiments_is_archived'), table_name='experiments')
    op.drop_index(op.f('ix_experiments_fin_automated_reports'), table_name='experiments')
    op.drop_table('experiments')
    # ### end Alembic commands ###
